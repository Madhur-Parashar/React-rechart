{"version":3,"sources":["components/Landing.js","App.js","serviceWorker.js","reducer/loginreducer.js","index.js"],"names":["RangePicker","DatePicker","Content","Layout","Landing","state","pagination","pageSize","highestDate","lowestDate","disabledDate","tableChartData","data","timestamp","game","revenue","impressions","onChange","date","dateString","console","log","modifyData","Object","toConsumableArray","_this","filter","val","pager","objectSpread","total","length","setState","current","moment","handleTableChange","filters","sorter","render","react_default","a","createElement","layout","style","background","padding","margin","textAlign","marginBottom","defaultValue","es6","width","height","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","table","columns","title","dataIndex","rowKey","dataSource","_this2","this","params","method","url","headers","Access-Control-Allow-Origin","axios","then","responseData","res","map","index","obj","eCPM","sort","b","Date","catch","err","toFixed","Component","App","Landing_Landing","Boolean","window","location","hostname","match","initialState","username","password","loginReducer","arguments","undefined","action","newstate","value","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","loginreducer","applyMiddleware","next","result","getState","ReactDOM","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a4d9a28.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import logo from './logo.svg';\r\nimport { Layout, DatePicker, Table } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport \"./landing.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default class Landing extends Component {\r\n  state = {\r\n    pagination: { pageSize: 5 },\r\n    highestDate: null,\r\n    lowestDate: null,\r\n    disabledDate: false,\r\n\r\n    tableChartData: null,\r\n    data: [\r\n      {\r\n        timestamp: \"2019-04-10\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 25,\r\n        impressions: 1040555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-10\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 150,\r\n        impressions: 1140555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-11\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 140,\r\n        impressions: 1240000\r\n      },\r\n      {\r\n        timestamp: \"2019-04-11\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 130,\r\n        impressions: 1100666\r\n      },\r\n      {\r\n        timestamp: \"2019-04-12\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 150,\r\n        impressions: 1345222\r\n      },\r\n      {\r\n        timestamp: \"2019-04-12\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 76,\r\n        impressions: 1000111\r\n      },\r\n      {\r\n        timestamp: \"2019-04-13\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 50,\r\n        impressions: 1046123\r\n      },\r\n      {\r\n        timestamp: \"2019-04-13\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 300,\r\n        impressions: 5280000\r\n      },\r\n      {\r\n        timestamp: \"2019-04-14\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 50,\r\n        impressions: 1111222\r\n      },\r\n      {\r\n        timestamp: \"2019-04-14\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 110,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-15\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 95,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-15\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 75,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-16\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 85,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-16\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 150,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-17\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 100,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-17\",\r\n        game: \"World Cricket Championships\",\r\n        revenue: 200,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-18\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 500,\r\n        impressions: 5940555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-18\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 120,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-19\",\r\n        game: \"Callbreak Multiplier\",\r\n        revenue: 150,\r\n        impressions: 1240555\r\n      },\r\n      {\r\n        timestamp: \"2019-04-19\",\r\n        game: \"World Cricket Championship\",\r\n        revenue: 100,\r\n        impressions: 1240555\r\n      }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    const url = \"http(s)://www.mocky.io/v2/5cd04a20320000442200fc10\";\r\n    let params = {\r\n      method: \"GET\",\r\n      url: url,\r\n      headers: { \"Access-Control-Allow-Origin\": \"*\" }\r\n    };\r\n\r\n    axios(params)\r\n      .then(responseData => {\r\n        console.log(responseData);\r\n        let res = responseData.map((data, index) => {\r\n          let obj = { ...data };\r\n          let eCPM = (obj.revenue / obj.impressions) * 1000;\r\n          obj[\"eCPM\"] = eCPM;\r\n          return obj;\r\n        });\r\n        responseData.sort(function(a, b) {\r\n          var date1 = new Date(a.timestamp);\r\n          var date2 = new Date(b.timestamp);\r\n          return date1 - date2;\r\n        });\r\n\r\n        var highestDate = responseData[this.state.data.length - 1].timestamp;\r\n        console.log(highestDate);\r\n\r\n        var lowestDate = responseData[0].timestamp;\r\n        console.log(lowestDate);\r\n        console.log(res);\r\n        const pager = { ...this.state.pagination };\r\n        pager.total = res.length;\r\n        this.setState({\r\n          data: res,\r\n          lowestDate: lowestDate,\r\n          highestDate: highestDate,\r\n          tableChartData: res,\r\n          pagination: pager\r\n        });\r\n      })\r\n      .catch(err => {\r\n        let responseData = [...this.state.data];\r\n        let res = responseData.map((data, index) => {\r\n          let obj = { ...data };\r\n          let eCPM = (obj.revenue / obj.impressions) * 1000;\r\n          obj[\"eCPM\"] = eCPM.toFixed(3);\r\n          return obj;\r\n        });\r\n        responseData.sort(function(a, b) {\r\n          var date1 = new Date(a.timestamp);\r\n          var date2 = new Date(b.timestamp);\r\n          return date1 - date2;\r\n        });\r\n\r\n        var highestDate = responseData[this.state.data.length - 1].timestamp;\r\n        // console.log(highestDate);\r\n\r\n        var lowestDate = responseData[0].timestamp;\r\n        // console.log(lowestDate);\r\n        // console.log(res);\r\n        const pager = { ...this.state.pagination };\r\n        pager.total = res.length;\r\n        this.setState({\r\n          data: res,\r\n          lowestDate: lowestDate,\r\n          highestDate: highestDate,\r\n          tableChartData: res,\r\n          pagination: pager\r\n        });\r\n      });\r\n  }\r\n  onChange = (date, dateString) => {\r\n    console.log(date, dateString);\r\n    let data = [...this.state.data];\r\n    let modifyData = data.filter(\r\n      val => val.timestamp >= dateString[0] && val.timestamp <= dateString[1]\r\n    );\r\n    console.log(modifyData);\r\n    const pager = { ...this.state.pagination };\r\n    pager.total = modifyData.length;\r\n    this.setState({ tableChartData: modifyData, pagination: pager });\r\n  };\r\n\r\n  disabledDate = current => {\r\n    // console.log(\r\n    //   `current: ${current} and  ${current <\r\n    //     new Date(this.state.lowestDate)} and date: ${moment(\r\n    //     this.state.lowestDate\r\n    //   )}`\r\n    // );\r\n    return (\r\n      current < moment(this.state.lowestDate) ||\r\n      current > moment(this.state.highestDate)\r\n    );\r\n  };\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    pager.total = this.state.tableChartData.length;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n  };\r\n  render = () => {\r\n    const columns = [\r\n      {\r\n        title: \"timestamp\",\r\n        dataIndex: \"timestamp\"\r\n      },\r\n      {\r\n        title: \"game\",\r\n        dataIndex: \"game\"\r\n      },\r\n      {\r\n        title: \"revenue\",\r\n        dataIndex: \"revenue\"\r\n      },\r\n      {\r\n        title: \"eCPM\",\r\n        dataIndex: \"eCPM\"\r\n      },\r\n      {\r\n        title: \"impressions\",\r\n        dataIndex: \"impressions\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Layout>\r\n        <Content\r\n          style={{\r\n            background: \"#F3F9FB\",\r\n            padding: 24,\r\n            margin: 0\r\n          }}\r\n        >\r\n          <div style={{ textAlign: \"center\", marginBottom: 40 }}>\r\n            <RangePicker\r\n              onChange={this.onChange}\r\n              disabledDate={this.disabledDate}\r\n              defaultValue={[moment(\"2019-04-10\"), moment(\"2019-04-19\")]}\r\n            />\r\n          </div>\r\n\r\n          <LineChart\r\n            width={600}\r\n            height={300}\r\n            data={this.state.tableChartData}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <XAxis dataKey=\"timestamp\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"eCPM\" stroke=\"#82ca9d\" />\r\n          </LineChart>\r\n\r\n          <Table\r\n            columns={columns}\r\n            rowKey=\"eCPM\"\r\n            pagination={this.state.pagination}\r\n            onChange={this.handleTableChange}\r\n            dataSource={this.state.tableChartData}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Landing from \"./components/Landing\";\n\n\nexport default class App extends Component {\n\n  render = () =>{\n   \n    \n    return (\n      <div>\n       <Landing/>\n         </div>\n        \n    )\n}\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    username: null,\r\n    password: null\r\n}\r\n\r\nconst loginReducer = (state= initialState,action)=>{\r\nif(action.type===\"CHANGE_USER\"){\r\n   let newstate = {...state};\r\n    newstate.username = action.value;\r\n    return newstate;\r\n}\r\nif(action.type===\"CHANGE_PASS\"){\r\n  let  newstate = {...state};\r\n    newstate.password = action.value;\r\n    return newstate;\r\n}\r\nelse{\r\n    return state\r\n}\r\n}\r\n\r\nexport default loginReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport {Provider} from 'react-redux';\n\nimport loginreducer from './reducer/loginreducer';\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(loginreducer,composeEnhancers(applyMiddleware(logger)));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}