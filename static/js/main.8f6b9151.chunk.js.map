{"version":3,"sources":["components/Landing.js","App.js","index.js"],"names":["RangePicker","DatePicker","Content","Layout","Landing","state","pagination","pageSize","highestDate","lowestDate","disabledDate","defaultDate","tableChartData","data","onChange","date","dateString","modifyData","Object","toConsumableArray","_this","filter","val","timestamp","pager","objectSpread","total","length","setState","moment","current","handleTableChange","filters","sorter","render","react_default","a","createElement","layout","style","textAlign","marginBottom","className","value","es6","width","height","margin","dataKey","strokeDasharray","type","stroke","table","columns","title","dataIndex","rowKey","dataSource","_this2","this","params","method","url","axios","then","responseData","res","map","index","obj","eCPM","revenue","impressions","toFixed","sort","b","Date","catch","err","message","error","Component","App","Landing_Landing","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f6b9151.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import logo from './logo.svg';\r\nimport { Layout, DatePicker, Table, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport \"./landing.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default class Landing extends Component {\r\n  state = {\r\n    pagination: { pageSize: 5 },\r\n    highestDate: null,\r\n    lowestDate: null,\r\n    disabledDate: false,\r\n    defaultDate: [],\r\n    tableChartData: null,\r\n    data: []\r\n  };\r\n  componentDidMount() {\r\n    const url = \"https://www.mocky.io/v2/5cd04a20320000442200fc10\";\r\n    let params = {\r\n      method: \"GET\",\r\n      url: url\r\n    };\r\n\r\n    axios(params)\r\n      .then(responseData => {\r\n        let res = responseData.data.map((data, index) => {\r\n          let obj = { ...data };\r\n          let eCPM = (obj.revenue / obj.impressions) * 1000;\r\n          obj[\"eCPM\"] = eCPM.toFixed(3);\r\n          return obj;\r\n        });\r\n        res.sort(function(a, b) {\r\n          var date1 = new Date(a.timestamp);\r\n          var date2 = new Date(b.timestamp);\r\n          return date1 - date2;\r\n        });\r\n\r\n        var highestDate = res[res.length - 1].timestamp;\r\n\r\n        var lowestDate = res[0].timestamp;\r\n\r\n        const pager = { ...this.state.pagination };\r\n        pager.total = res.length;\r\n        this.setState({\r\n          data: res,\r\n          lowestDate: lowestDate,\r\n          highestDate: highestDate,\r\n          tableChartData: res,\r\n          pagination: pager,\r\n          defaultDate: [moment(lowestDate), moment(highestDate)]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        message.error(\"Check your internet connection...\");\r\n      });\r\n  }\r\n  onChange = (date, dateString) => {\r\n    let data = [...this.state.data];\r\n    let modifyData = data.filter(\r\n      val => val.timestamp >= dateString[0] && val.timestamp <= dateString[1]\r\n    );\r\n\r\n    const pager = { ...this.state.pagination };\r\n    pager.total = modifyData.length;\r\n    this.setState({\r\n      tableChartData: modifyData,\r\n      pagination: pager,\r\n      defaultDate: [moment(dateString[0]), moment(dateString[1])]\r\n    });\r\n  };\r\n\r\n  disabledDate = current => {\r\n    return (\r\n      current < moment(this.state.lowestDate) ||\r\n      current > moment(this.state.highestDate)\r\n    );\r\n  };\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    pager.total = this.state.tableChartData.length;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n  };\r\n  render = () => {\r\n    const columns = [\r\n      {\r\n        title: \"timestamp\",\r\n        dataIndex: \"timestamp\"\r\n      },\r\n      {\r\n        title: \"game\",\r\n        dataIndex: \"game\"\r\n      },\r\n      {\r\n        title: \"revenue\",\r\n        dataIndex: \"revenue\"\r\n      },\r\n      {\r\n        title: \"eCPM\",\r\n        dataIndex: \"eCPM\"\r\n      },\r\n      {\r\n        title: \"impressions\",\r\n        dataIndex: \"impressions\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Layout>\r\n        <Content>\r\n          <div style={{ textAlign: \"center\", marginBottom: 40 }}>\r\n            <div className=\"rangeSelection\">Select range</div>\r\n            <RangePicker\r\n              onChange={this.onChange}\r\n              disabledDate={this.disabledDate}\r\n              value={this.state.defaultDate}\r\n            />\r\n          </div>\r\n          <ResponsiveContainer width=\"95%\" height={400}>\r\n            <LineChart\r\n              style={{ margin: \"auto\" }}\r\n              data={this.state.tableChartData}\r\n            >\r\n              <XAxis dataKey=\"timestamp\" />\r\n              <YAxis />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"eCPM\" stroke=\"#82ca9d\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n\r\n          <Table\r\n            columns={columns}\r\n            rowKey=\"eCPM\"\r\n            pagination={this.state.pagination}\r\n            onChange={this.handleTableChange}\r\n            dataSource={this.state.tableChartData}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport Landing from \"./components/Landing\";\n\nexport default class App extends Component {\n  render = () => {\n    return (\n      <div>\n        <Landing />\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}